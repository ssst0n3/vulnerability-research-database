package vrdb

import (
	"github.com/ssst0n3/vulnerability-research-database/model/osv"
	"github.com/ssst0n3/vulnerability-research-database/model/osv/type/credit"
	"gorm.io/gorm"
)

type Credit struct {
	gorm.Model
	Name            string          `json:"name"`
	Contact         *Strings        `json:"contact,omitempty"`
	Type            credit.Type     `json:"type"`
	ResearcherID    uint            `json:"researcher_id"`
	Vulnerabilities []Vulnerability `json:"vulnerabilities" gorm:"many2many:vulnerability_credits;"`
	Analyses        []Analysis      `json:"analyses" gorm:"many2many:analysis_credits;"`
	Exploits        []Exploit       `json:"exploits" gorm:"many2many:exploit_credits;"`
	Environments    []Environment   `json:"environments" gorm:"many2many:environment_credits;"`
}

func (c Credit) OSV() *osv.Credit {
	return &osv.Credit{
		Name:    c.Name,
		Contact: []string(*c.Contact),
		Type:    c.Type,
	}
}

func NewCredit(o osv.Credit) *Credit {
	var contacts Strings
	for _, v := range o.Contact {
		contacts = append(contacts, v)
	}
	return &Credit{
		Name:    o.Name,
		Contact: &contacts,
		Type:    o.Type,
	}
}
func NewCredits(o []osv.Credit) (credits []Credit) {
	for _, c := range o {
		credits = append(credits, *NewCredit(c))
	}
	return
}
