package osv

import (
	"database/sql/driver"
	"encoding/json"
)

func (t *Entry) Value() (driver.Value, error) { return json.Marshal(*t) }
func (t *Entry) Scan(value interface{}) error { return json.Unmarshal(value.([]byte), t) }

func (t *Time) Value() (driver.Value, error) { return t.MarshalJSON() }
func (t *Time) Scan(value interface{}) error { return t.UnmarshalJSON([]byte(value.([]byte))) }

//type Severities []Severity
//
//func (t *Severities) Value() (driver.Value, error) { return json.Marshal(*t) }
//func (t *Severities) Scan(value interface{}) error { return json.Unmarshal(value.([]byte), t) }
//
//type Affects []Affected
//
//func (t *Affects) Value() (driver.Value, error) { return json.Marshal(*t) }
//func (t *Affects) Scan(value interface{}) error { return json.Unmarshal(value.([]byte), t) }
//
//type References []reference.Reference
//
//func (t *References) Value() (driver.Value, error) { return json.Marshal(*t) }
//func (t *References) Scan(value interface{}) error { return json.Unmarshal(value.([]byte), t) }
//
//type Credits []credit.Credit
//
//func (t *Credits) Value() (driver.Value, error) { return json.Marshal(*t) }
//func (t *Credits) Scan(value interface{}) error { return json.Unmarshal(value.([]byte), t) }
